@*Copyright © 2018 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/Licensing*@
@inherits YetaWF.Core.Views.Shared.Grid<YetaWF.Core.Models.GridDefinition>
@using YetaWF.Core.Addons

@{
    Manager.AddOnManager.AddAddOnGlobal("github.com.free-jqgrid", "jqgrid");

    string dataDelete = "", dataDisplay = "";
    string dataExtra = "";
    if (Model.CanAddOrDelete) {
        if (string.IsNullOrWhiteSpace(Model.DeleteProperty)) { throw new YetaWF.Core.Support.InternalError("Must provide DeleteProperty in GridDefinition when using CanAddOrDelete"); }
        dataDelete = " data-deleteproperty=\"" + Model.DeleteProperty + "\"";
        if (string.IsNullOrWhiteSpace(Model.DisplayProperty)) { throw new YetaWF.Core.Support.InternalError("Must provide DisplayProperty in GridDefinition when using CanAddOrDelete"); }
        dataDisplay = " data-displayproperty=\"" + Model.DisplayProperty + "\"";
    }
    string idEmpty = UniqueId();
    if (Model.ExtraData != null) {
        dataExtra = " data-extraproperty=\"" + Html.RenderExtraData(Model) + "\"";
    }
}

<table id="@Model.Id" class="yt_grid @(YetaWF.Core.Addons.Forms.CssFormNoSubmitContents) t_display" data-fieldprefix="@Html.GetDataFieldPrefix(Model)" @Html.Raw(dataDelete) @Html.Raw(dataDisplay) @Html.Raw(dataExtra)></table>
<div id="@(Model.Id)_Pager"></div>

@{
    GridHelper.GridSavedSettings gridSavedSettings = null;
    int pageSize = Model.InitialPageSize;
    int initialPage = 1;
    if (Model.SettingsModuleGuid != Guid.Empty) {
        gridSavedSettings = GridHelper.LoadModuleSettings(@Model.SettingsModuleGuid, initialPage, pageSize);
        pageSize = gridSavedSettings.PageSize;
        initialPage = gridSavedSettings.CurrentPage;
    }
    bool isAjax = !string.IsNullOrWhiteSpace(Model.AjaxUrl);
    if (isAjax && Model.Data != null) { throw new YetaWF.Core.Support.InternalError("Can't use Data with an Ajax grid"); }
    if (!isAjax && Model.Data == null) { throw new YetaWF.Core.Support.InternalError("Neither AjaxUrl nor local Data specified"); }

    string dataId = @UniqueId("griddata");
    bool hasFilters = false;
<script>
    function InitGrid_@Model.Id () {
        @if (!isAjax) {
            @: var @dataId = [
                @Html.DisplayFor(m=>Model.Data.Data, "GridDataRecords", "")
            @: ];
        }
        var $grid = $("#@Model.Id");
        var emptyDiv = "<div id='@idEmpty' class='t_emptydiv'>@Model.NoRecordsText</div>";
        var options = {
            colNames: [ @Html.RenderColNames(Model) ],
            colModel: [ @Html.RenderColModel(gridSavedSettings, Model, out hasFilters) ],
            shrinkToFit: @JSEncode(Model.SizeToFit),
            @if (pageSize > 0 && (isAjax || Model.CanAddOrDelete || pageSize < Model.Data.Data.Count)) {
                @: pager : '#@(Model.Id)_Pager',
                @: // pagerpos: 'left',
                @: pgButtons: @(Model.PagerButtons > 0 ? "true" : "false"),
                @: rowNum: @pageSize,
                if (Model.PageSizes.Count > 0) {
                    @: rowList: @JSEncode(Model.PageSizes),
                }
                @: viewrecords: true,
            }
            @Html.RenderGridSortOrder(gridSavedSettings, Model)
            page: @initialPage,
            @if (isAjax) {
                @: url:'@Model.AjaxUrl',
                @: mtype:'POST',
                @: datatype: 'json',
                @: ajaxGridOptions: {'Accept-Encoding' : 'gzip'},

                @: loadBeforeSend: function(xhr,settings) {
                @:     return YetaWF_Grid.modifySend($grid, '@Model.SettingsModuleGuid.ToString()', options, xhr, settings);
                @: },
                @: beforeProcessing: function(data,status,xhr) {
                @:    YetaWF_Grid.modifyReceive($grid, options, data,status,xhr);
                @: },
                @: loadError: function(xhr,status,error) {
                @:    YetaWF_Grid.loadError($grid,xhr,status,error)
                @: },
                @: jsonReader: {
                @:    repeatitems: false,
                @: },
            } else {
                @: data: @dataId,
                @: datatype: 'local',
            }
            @if (Model.SettingsModuleGuid != Guid.Empty) {
                @: resizeStop: function(newwidth, index) {
                @:    YetaWF_Grid.SaveSettingsColumnWidths($grid, '@Html.GetSettingsSaveColumnWidthsUrl()', '@Model.SettingsModuleGuid', options, newwidth, index);
                @: },
            }
            gridComplete: function() {
                YetaWF_Grid.gridComplete($grid, '@Model.Id'); // make sure we execute any javascript embedded in the grid (which arrived via data)
                @if (Model.ShowHeader) {
                    @: YetaWF_Grid.gridComplete_NoRecords($grid, '@idEmpty', emptyDiv); // handle "No Records" condition
                }
            },
        };

        $grid.jqGrid(options);

        $grid.jqGrid('filterToolbar',{searchOperators : true});
        @if (pageSize > 0 && (isAjax || Model.CanAddOrDelete || pageSize < Model.Data.Data.Count)) {
            @: $grid.jqGrid('navGrid','#@(Model.Id)_Pager', {});
        }

        @if (isAjax) {
            // Custom reload button so we can reload the grid without clearing search filters
            @: $grid.jqGrid('navButtonAdd', '#@(Model.Id)_Pager', {
            @:     caption: @JSEncode(__ResStr("refreshtext", "")),
            @:     title: @JSEncode(__ResStr("refreshtitle", "Reload data")),
            @:     buttonicon: 'ui-icon-refresh',
            @:     onClickButton: function () {
            @:       $grid.trigger('reloadGrid');
            @:     }
            @: });
        }

        // http://www.trirand.com/blog/?page_id=393/help/search-toolbar-hide-by-default
        @if (hasFilters) {
            @: $grid.jqGrid('navButtonAdd', '#@(Model.Id)_Pager', {
            @:     caption: "",
            @:     title: YLocs.Grid.pgsearchTB,
            @:     buttonicon: 'ui-icon-search',
            @:     onClickButton: function () {
            @:         this.toggleToolbar();
            @:         if ($.isFunction(this.p._complete)) {
            @:             if ($('.ui-search-toolbar', this.grid.hDiv).is(':visible'))
            @:             {
            @:                 $('.ui-search-toolbar', this.grid.fhDiv).show();
            @:             } else {
            @:                 $('.ui-search-toolbar', this.grid.fhDiv).hide();
            @:             }
            @:             this.p._complete.call(this);
            @:             fixPositionsOfFrozenDivs.call(this);
            @:         }
            @:     }
            @: });
            @: YetaWF_Grid.toggleSearchToolbar($grid, @JSEncode(YetaWF.Core.Localize.UserSettings.GetProperty<bool>("ShowGridSearchToolbar") || Model.ShowFilter == true));
        }
        @if (Model.SupportReload) {
            @:     var $mod = $grid.closest('.yModule');
            @:     if ($mod.length != 1) throw "Can't find containing module";
            @:     YetaWF_Basics.reloadInfo.push({
            @:        module: $mod,
            @:        callback: function() {
            @:          $grid.trigger('reloadGrid');
            @:        }
            @:     });
        }

        @if (!isAjax) {
            @: if (typeof YetaWF_Forms === 'undefined' || YetaWF_Forms == undefined) throw "Can't use local data outside of a form or partial form";/*DEBUG*/
            @: var $form = $grid.closest('form');
            @: if ($form.length == 0) throw "Can't find containing form";
            if (Model.HandleLocalInput) {
                @: YetaWF_Grid.HandleInputUpdates($grid, true);// handle input in grid for local data
                @: YetaWF_Forms.addPreSubmitHandler(@(Manager.InPartialView ? 1 : 0), {
                @:    form: $form,
                @:    callback: function(entry) {
                @:        YetaWF_Grid.HandleSubmitLocalData($grid, $form);
                @:    },
                @:    userdata_grid: $grid,
                @: });
                @: YetaWF_Grid.ShowPager($grid); // show/hide pager
            } else {
                @: YetaWF_Grid.HandleInputUpdates($grid, false);
                @: YetaWF_Forms.addPreSubmitHandler(@(Manager.InPartialView ? 1 : 0), {
                @:    form: $form,
                @:    callback: function(entry) {
                @:        YetaWF_Grid.HandleSubmitFields($grid, $form);
                @:    },
                @:    userdata_grid: $grid,
                @: });
            }
        }
        YetaWF_Grid.fixHeaders($grid);
    }
    InitGrid_@(Model.Id)();
</script>
}





