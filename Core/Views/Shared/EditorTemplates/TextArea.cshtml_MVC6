@*Copyright © 2018 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/Licensing*@
@inherits YetaWF.Core.Views.Shared.TextArea<object>
@using YetaWF.Core
@using YetaWF.Core.Views
@using YetaWF.Core.Support
@using YetaWF.Core.Addons
@{
    string text;
    if (Model is YetaWF.Core.Models.MultiString) {
        text = (YetaWF.Core.Models.MultiString)Model;
    } else {
        text = (string)Model;
    }
    Guid owningGuid = Guid.Empty;
    Html.TryGetParentModelSupportProperty<Guid>("", "Folder", out owningGuid);
    if (owningGuid == Guid.Empty && Manager.CurrentModuleEdited != null) {
        owningGuid = Manager.CurrentModuleEdited.ModuleGuid;
    }
    if (owningGuid == Guid.Empty) {
        owningGuid = Manager.CurrentModule.ModuleGuid;
    }
    Guid subFolder = Guid.Empty;
    Html.TryGetControlInfo<Guid>("", "SubFolder", out subFolder);
    if (subFolder == Guid.Empty) {
        Html.TryGetParentModelSupportProperty<Guid>("", "SubFolder", out subFolder);
    }
}
@{
    bool sourceOnly = Html.GetControlInfo<bool>("", "SourceOnly", false);
    bool useSave = Html.GetControlInfo<bool>("", "TextAreaSave", false);
    bool useImageBrowsing = Html.GetControlInfo<bool>("", "ImageBrowse", false);
    bool useFlashBrowsing = Html.GetControlInfo<bool>("", "FlashBrowse", false);
    bool usePageBrowsing = Html.GetControlInfo<bool>("", "PageBrowse", false);
    bool restrictedHtml = Html.GetControlInfo<bool>("", "RestrictedHtml", false);
    int emHeight = Html.GetControlInfo<int>("", "EmHeight", 10);
    int pixHeight = Manager.CharHeight * emHeight;

    string filebrowserImageBrowseUrl = null;
    if (useImageBrowsing) {
        filebrowserImageBrowseUrl = string.Format("/__CKEditor/ImageBrowseLinkUrl?__FolderGuid={0}&__SubFolder={1}",
            owningGuid.ToString(), subFolder.ToString());
        filebrowserImageBrowseUrl += "&" + Globals.Link_NoEditMode + "=y";
    }
    string filebrowserFlashBrowseUrl = null;
    if (useFlashBrowsing) {
        filebrowserFlashBrowseUrl = string.Format("/__CKEditor/FlashBrowseLinkUrl?__FolderGuid={0}&__SubFolder={1}", owningGuid.ToString(), subFolder.ToString());
        filebrowserFlashBrowseUrl += "&" + Globals.Link_NoEditMode + "=y";
    }
    string filebrowserPageBrowseUrl = null;
    if (usePageBrowsing) {
        filebrowserPageBrowseUrl = "/__CKEditor/PageBrowseLinkUrl?";
        filebrowserPageBrowseUrl += Globals.Link_NoEditMode + "=y";
    }
    string addonUrl = AddOnManager.GetAddOnGlobalUrl("ckeditor.com", "ckeditor", YetaWF.Core.Addons.AddOnManager.UrlType.Base) + "__CUSTOM_FILES/";
    string url = addonUrl + "full_config.js";
    if (sourceOnly) {
        url = addonUrl + "sourceonly_config.js";
    } else if (!useSave) {
        url = addonUrl + "nosave_config.js";
    }
}

@await Html.RenderTextAreaAsync("", text, HtmlAttributes: new { @class = "yt_textarea t_edit", id = ControlId, data_height=pixHeight })

<script>
    CKEDITOR.replace('@ControlId', {
        customConfig: '@Manager.GetCDNUrl(url)',
        height: '@string.Format("{0}px", pixHeight)',
        allowedContent: @(restrictedHtml ? "false" : "true"),
        @if (!string.IsNullOrWhiteSpace(filebrowserImageBrowseUrl)) {
            @: filebrowserImageBrowseUrl: @JSEncode(filebrowserImageBrowseUrl),
            @: filebrowserImageBrowseLinkUrl: @JSEncode(filebrowserImageBrowseUrl),
        }
        @if (!string.IsNullOrWhiteSpace(filebrowserFlashBrowseUrl)) {
            @: filebrowserFlashBrowseUrl: @JSEncode(filebrowserFlashBrowseUrl),
        }
        @if (!string.IsNullOrWhiteSpace(filebrowserFlashBrowseUrl)) {
            @: filebrowserBrowseUrl: @JSEncode(filebrowserPageBrowseUrl),
        }
        filebrowserWindowFeatures: 'modal=yes,location=no,menubar=no,toolbar=no,dependent=yes,minimizable=no,alwaysRaised=yes,resizable=yes,scrollbars=yes'
    });
    // save data in the textarea field when the form is submitted
    YetaWF_Forms.addPreSubmitHandler(@(Manager.InPartialView ? 1 : 0), {
        form: YetaWF_Forms.getForm($('#@ControlId')),
        callback: function (entry) {
            var $ctl = $('#@ControlId');
            var ckEd = CKEDITOR.instances['@ControlId'];
            var data = ckEd.getData();
            $ctl.val(data);
            //return $ctl[0].name + "&" + encodeURI(data);
        }
    });
</script>
