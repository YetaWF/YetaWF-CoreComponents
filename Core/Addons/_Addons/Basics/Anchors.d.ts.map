{"version":3,"sources":["AddOns/YetaWF/Core/_Addons/Basics/Anchors.ts"],"names":[],"mappings":"AAIA,kBAAU,MAAM,CAAC;IAEb,MAAa,OAAO;;QAIhB;;WAEG;QACI,IAAI,IAAK,IAAI;QA2KpB,OAAO,CAAC,aAAa;QAOrB,OAAO,CAAC,QAAQ;KAiBnB;CAsBJ","file":"Anchors.d.ts","sourcesContent":["/* Copyright Â© 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/Licensing */\r\n\r\n// Anchor handling, navigation\r\n\r\nnamespace YetaWF {\r\n\r\n    export class Anchors {\r\n\r\n        public constructor() { }\r\n\r\n        /**\r\n         * Handles all navigation using <a> tags.\r\n         */\r\n        public init() : void {\r\n\r\n            // For an <a> link clicked, add the page we're coming from (not for popup links though)\r\n            $YetaWF.registerEventHandlerBody(\"click\", \"a.yaction-link,area.yaction-link\", (ev: Event) => {\r\n\r\n                // find the real anchor, ev.target was clicked but it may not be the anchor itself\r\n                if (!ev.target) return true;\r\n                var anchor = $YetaWF.elementClosestCond(ev.target as HTMLElement, \"a,area\") as HTMLAnchorElement;\r\n                if (!anchor) return true;\r\n\r\n                var url = anchor.href;\r\n\r\n                // send tracking info\r\n                if ($YetaWF.elementHasClass(anchor, \"yTrack\")) {\r\n                    // find the unique skinvisitor module so we have antiforgery tokens and other context info\r\n                    var f = $YetaWF.getElement1BySelectorCond(\".YetaWF_Visitors_SkinVisitor.YetaWF_Visitors.yModule form\");\r\n                    if (f) {\r\n\r\n                        var urlTrack = f.getAttribute(\"data-track\");\r\n                        if (!urlTrack) throw \"data-track not defined\";/*DEBUG*/\r\n\r\n                        var uri = $YetaWF.parseUrl(urlTrack);\r\n                        var data = { \"url\": url };\r\n                        uri.addSearchSimpleObject(data);\r\n                        uri.addFormInfo(f);\r\n\r\n                        var request: XMLHttpRequest = new XMLHttpRequest();\r\n                        request.open(\"POST\", urlTrack, true);\r\n                        request.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\r\n                        request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n                        request.send(uri.toFormData());\r\n                        // no response handling\r\n                    }\r\n                }\r\n\r\n                var uri = $YetaWF.parseUrl(url);\r\n                if (uri.getPath().length === 0 || (!uri.getSchema().startsWith(\"http:\") && !uri.getSchema().startsWith(\"https:\"))) return true;\r\n\r\n                // if we're on an edit page, propagate edit to new link unless the new uri explicitly has !Noedit\r\n                if (!uri.hasSearch(YConfigs.Basics.Link_EditMode) && !uri.hasSearch(YConfigs.Basics.Link_NoEditMode)) {\r\n                    var currUri = $YetaWF.parseUrl(window.location.href);\r\n                    if (currUri.hasSearch(YConfigs.Basics.Link_EditMode))\r\n                        uri.addSearch(YConfigs.Basics.Link_EditMode, \"y\");\r\n                }\r\n                // add status/visibility of page control module\r\n                uri.removeSearch(YConfigs.Basics.Link_PageControl);\r\n                if (YVolatile.Basics.PageControlVisible)\r\n                    uri.addSearch(YConfigs.Basics.Link_PageControl, \"y\");\r\n\r\n                // add our module context info (if requested)\r\n                if (anchor.getAttribute(YConfigs.Basics.CssAddModuleContext) != null) {\r\n                    if (!uri.hasSearch(YConfigs.Basics.ModuleGuid)) {\r\n                        var guid = $YetaWF.getModuleGuidFromTag(anchor);\r\n                        uri.addSearch(YConfigs.Basics.ModuleGuid, guid);\r\n                    }\r\n                }\r\n\r\n                // pass along the charsize\r\n                {\r\n                    var charSize = $YetaWF.getCharSizeFromTag(anchor);\r\n                    uri.removeSearch(YConfigs.Basics.Link_CharInfo);\r\n                    uri.addSearch(YConfigs.Basics.Link_CharInfo, charSize.width + \",\" + charSize.height);\r\n                }\r\n\r\n                // fix the url to include where we came from\r\n                var target = anchor.getAttribute(\"target\");\r\n                if ((!target || target === \"\" || target === \"_self\") && anchor.getAttribute(YConfigs.Basics.CssSaveReturnUrl) != null) {\r\n                    // add where we currently are so we can save it in case we need to return to this page\r\n                    var currUri = $YetaWF.parseUrl(window.location.href);\r\n                    currUri.removeSearch(YConfigs.Basics.Link_OriginList);// remove originlist from current URL\r\n                    currUri.removeSearch(YConfigs.Basics.Link_InPopup);// remove popup info from current URL\r\n                    // now update url (where we're going with originlist)\r\n                    uri.removeSearch(YConfigs.Basics.Link_OriginList);\r\n                    var originList = YVolatile.Basics.OriginList.slice(0);// copy saved originlist\r\n\r\n                    if (anchor.getAttribute(YConfigs.Basics.CssDontAddToOriginList) == null) {\r\n                        var newOrigin = { Url: currUri.toUrl(), EditMode: YVolatile.Basics.EditModeActive, InPopup: $YetaWF.isInPopup() };\r\n                        originList.push(newOrigin);\r\n                        if (originList.length > 5)// only keep the last 5 urls\r\n                            originList = originList.slice(originList.length - 5);\r\n                    }\r\n                    uri.addSearch(YConfigs.Basics.Link_OriginList, JSON.stringify(originList));\r\n                    target = \"_self\";\r\n                }\r\n                if (!target || target === \"\" || target === \"_self\")\r\n                    target = \"_self\";\r\n\r\n                anchor.href = uri.toUrl(); // update original href in case let default handling take place\r\n\r\n                // first try to handle this as a link to the outer window (only used in a popup)\r\n                if ($YetaWF.PopupsAvailable()) {\r\n                    if ($YetaWF.Popups.handleOuterWindow(anchor))\r\n                        return false;\r\n                }\r\n                // try to handle this as a popup link\r\n                if ($YetaWF.PopupsAvailable()) {\r\n                    if ($YetaWF.Popups.handlePopupLink(anchor))\r\n                        return false;\r\n                }\r\n\r\n                var cookieToReturn: number | null = null;\r\n                var post: boolean = false;\r\n\r\n                if (anchor.getAttribute(YConfigs.Basics.CookieDoneCssAttr) != null) {\r\n                    cookieToReturn = (new Date()).getTime();\r\n                    uri.removeSearch(YConfigs.Basics.CookieToReturn);\r\n                    uri.addSearch(YConfigs.Basics.CookieToReturn, JSON.stringify(cookieToReturn));\r\n                }\r\n                if (anchor.getAttribute(YConfigs.Basics.PostAttr) != null)\r\n                    post = true;\r\n\r\n                url = anchor.href = uri.toUrl(); // update original href in case we let default handling take place\r\n\r\n                if (cookieToReturn) {\r\n                    // this is a file download\r\n                    var confirm = anchor.getAttribute(YConfigs.Basics.CssConfirm);\r\n                    if (confirm != null) {\r\n                        $YetaWF.alertYesNo(confirm, undefined, () => {\r\n                            window.location.assign(url);\r\n                            $YetaWF.setLoading();\r\n                            this.waitForCookie(cookieToReturn);\r\n                        });\r\n                        return false;\r\n                    }\r\n                    $YetaWF.setLoading();\r\n                    window.location.assign(url);\r\n                } else {\r\n                    // if a confirmation is wanted, show it\r\n                    // this means that it's posted by definition\r\n                    var confirm = anchor.getAttribute(YConfigs.Basics.CssConfirm);\r\n                    if (confirm) {\r\n                        $YetaWF.alertYesNo(confirm, undefined, () => {\r\n                            this.postLink(url, anchor, cookieToReturn);\r\n                            var s = anchor.getAttribute(YConfigs.Basics.CssPleaseWait);\r\n                            if (s)\r\n                                $YetaWF.pleaseWait(s);\r\n                            return false;\r\n                        });\r\n                        return false;\r\n                    } else if (post) {\r\n                        var s = anchor.getAttribute(YConfigs.Basics.CssPleaseWait);\r\n                        if (s)\r\n                            $YetaWF.pleaseWait(s);\r\n                        this.postLink(url, anchor, cookieToReturn);\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (target === \"_self\") {\r\n                    // add overlay if desired\r\n                    var s = anchor.getAttribute(YConfigs.Basics.CssPleaseWait);\r\n                    if (s)\r\n                        $YetaWF.pleaseWait(s);\r\n                }\r\n                this.waitForCookie(cookieToReturn); // if any\r\n\r\n                // Handle unified page clicks by activating the desired pane(s) or swapping out pane contents\r\n                if (cookieToReturn) return true; // expecting cookie return\r\n                if (uri.getHostName() !== \"\" && uri.getHostName() !== window.document.domain) return true; // wrong domain\r\n                // if we're switching from https->http or from http->https don't use a unified page set\r\n                if (!window.document.location) return true;\r\n                if (!url.startsWith(\"http\") || !window.document.location.href.startsWith(\"http\")) return true; // neither http nor https\r\n                if ((url.startsWith(\"http://\") !== window.document.location.href.startsWith(\"http://\")) ||\r\n                    (url.startsWith(\"https://\") !== window.document.location.href.startsWith(\"https://\"))) return true; // switching http<>https\r\n\r\n                if (target === \"_self\")\r\n                    return !$YetaWF.ContentHandling.setContent(uri, true);\r\n\r\n                return true;\r\n            });\r\n        }\r\n        private waitForCookie(cookieToReturn: number | null) : void {\r\n            if (cookieToReturn) {\r\n                // check for cookie to see whether download started\r\n                // tslint:disable-next-line:no-unused-expression\r\n                new CookieWait(cookieToReturn);\r\n            }\r\n        }\r\n        private postLink(url: string, elem: HTMLAnchorElement, cookieToReturn: number | null) : void {\r\n            $YetaWF.setLoading();\r\n            this.waitForCookie(cookieToReturn);\r\n\r\n            var request: XMLHttpRequest = new XMLHttpRequest();\r\n            request.open(\"POST\", url, true);\r\n            request.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\r\n            request.onreadystatechange = (ev: Event) : any => {\r\n                var req = request;\r\n                if (req.readyState === 4 /*DONE*/) {\r\n                    $YetaWF.setLoading(false);\r\n                    $YetaWF.processAjaxReturn(req.responseText, req.statusText, req, elem);\r\n                }\r\n\r\n            };\r\n            request.send(\"\");\r\n        }\r\n    }\r\n\r\n    class CookieWait {\r\n\r\n        private cookiePattern: RegExp;\r\n        private cookieTimer: number;\r\n\r\n        constructor(cookieToReturn: number) {\r\n            this.cookiePattern = new RegExp((YConfigs.Basics.CookieDone + \"=\" + cookieToReturn), \"i\");\r\n            this.cookieTimer = setInterval(() => { this.checkCookies(); }, 500);\r\n        }\r\n        private checkCookies(): boolean {\r\n            if (document.cookie.search(this.cookiePattern) >= 0) {\r\n                clearInterval(this.cookieTimer);\r\n                $YetaWF.setLoading(false);// turn off loading indicator\r\n                console.log(\"Download complete!!\");\r\n                return false;\r\n            }\r\n            console.log(\"File still downloading...\", new Date().getTime());\r\n            return true;\r\n        }\r\n    }\r\n}"]}