{"version":3,"sources":["AddOns/YetaWF/Core/_Addons/Basics/Content.tsx"],"names":[],"mappings":"AAIA,kBAAU,MAAM,CAAC;IAkBb,UAAiB,aAAa;QAC1B,MAAM,EAAE,MAAM,CAAC;QACf,QAAQ,EAAE,MAAM,CAAC;QACjB,eAAe,EAAE,MAAM,CAAC;QACxB,OAAO,EAAE,WAAW,EAAE,CAAC;QACvB,MAAM,EAAE,MAAM,CAAC;QACf,SAAS,EAAE,MAAM,CAAC;QAClB,cAAc,EAAE,MAAM,CAAC;QACvB,YAAY,EAAE,MAAM,CAAC;QACrB,QAAQ,EAAE,MAAM,CAAC;QACjB,OAAO,EAAE,MAAM,CAAC;QAChB,gBAAgB,EAAE,MAAM,CAAC;QACzB,WAAW,EAAE,QAAQ,EAAE,CAAC;QACxB,kBAAkB,EAAE,OAAO,EAAE,CAAC;QAC9B,QAAQ,EAAE,QAAQ,EAAE,CAAC;QACrB,eAAe,EAAE,OAAO,EAAE,CAAC;QAC3B,iBAAiB,EAAE,MAAM,EAAE,CAAC;QAC5B,cAAc,EAAE,MAAM,EAAE,CAAC;QACzB,gBAAgB,EAAE,MAAM,CAAC;KAC5B;IACD,UAAiB,WAAW;QACxB,IAAI,EAAE,MAAM,CAAC;QACb,IAAI,EAAE,MAAM,CAAC;KAChB;IACD,UAAiB,OAAO;QACpB,IAAI,EAAE,MAAM,CAAC;QACb,IAAI,EAAE,MAAM,CAAC;KAChB;IACD,UAAiB,QAAQ;QACrB,IAAI,EAAE,MAAM,CAAC;QACb,GAAG,EAAE,MAAM,CAAC;KACf;IAED,MAAa,OAAO;QAGhB,OAAO,CAAC,WAAW;QAWnB,OAAO,CAAC,cAAc;QAiCtB,OAAO,CAAC,aAAa;QAWd,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,aAAa,KAAK,WAAW,GAAG,OAAO;QA2IhH,OAAO,CAAC,sBAAsB;QAqIvB,IAAI,IAAK,IAAI;KAEvB;CACJ","file":"Content.d.ts","sourcesContent":["/* Copyright Â© 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/Licensing */\r\n\r\n// Anchor handling, navigation\r\n\r\nnamespace YetaWF {\r\n\r\n    interface ContentData {\r\n        CacheVersion: string;\r\n        Path: string;\r\n        QueryString: string;\r\n        UnifiedSetGuid: string;\r\n        UnifiedMode: number;\r\n        UnifiedAddonMods: string[];\r\n        UniqueIdPrefixCounter: number;\r\n        IsMobile: boolean;\r\n        UnifiedSkinCollection: string | null;\r\n        UnifiedSkinFileName: string | null;\r\n        Panes: string[];\r\n        KnownCss: string[];\r\n        KnownScripts: string[];\r\n    }\r\n\r\n    export interface ContentResult {\r\n        Status: string;\r\n        Redirect: string;\r\n        RedirectContent: string;\r\n        Content: PaneContent[];\r\n        Addons: string;\r\n        PageTitle: string;\r\n        PageCssClasses: string;\r\n        CanonicalUrl: string;\r\n        LocalUrl: string;\r\n        Scripts: string;\r\n        EndOfPageScripts: string;\r\n        ScriptFiles: UrlEntry[];\r\n        ScriptFilesPayload: Payload[];\r\n        CssFiles: UrlEntry[];\r\n        CssFilesPayload: Payload[];\r\n        ScriptBundleFiles: string[];\r\n        CssBundleFiles: string[];\r\n        AnalyticsContent: string;\r\n    }\r\n    export interface PaneContent {\r\n        Pane: string;\r\n        HTML: string;\r\n    }\r\n    export interface Payload {\r\n        Name: string;\r\n        Text: string;\r\n    }\r\n    export interface UrlEntry {\r\n        Name: string;\r\n        Url: string;\r\n    }\r\n\r\n    export class Content {\r\n\r\n        // loads all scripts - we need to preserve the order of initialization hence the recursion\r\n        private loadScripts(scripts: UrlEntry[], payload: Payload[], run: () => void): void {\r\n\r\n            YVolatile.Basics.KnownScriptsDynamic = YVolatile.Basics.KnownScriptsDynamic || [];\r\n            var total = scripts.length;\r\n            if (total === 0) {\r\n                run();\r\n                return;\r\n            }\r\n            this.loadNextScript(scripts, payload, total, 0, run);\r\n        }\r\n\r\n        private loadNextScript(scripts: UrlEntry[], payload: Payload[], total: number, ix: number, run: () => void) : void {\r\n\r\n            var urlEntry = scripts[ix];\r\n            var name = urlEntry.Name;\r\n\r\n            var found = payload.filter((elem: Payload) => { return elem.Name === name; });\r\n            if (found.length > 0) {\r\n                $YetaWF.runGlobalScript(found[0].Text);\r\n                YVolatile.Basics.KnownScriptsDynamic.push(name);// save as dynamically loaded script\r\n                this.processScript(scripts, payload, total, ix, run);\r\n            } else {\r\n                var loaded;\r\n                var js = document.createElement(\"script\");\r\n                js.type = \"text/javascript\";\r\n                js.async = false; // need to preserve execution order\r\n                js.src = urlEntry.Url;\r\n                js.setAttribute(\"data-name\", name);\r\n                js.onload = js.onerror = js[\"onreadystatechange\"] = (ev: any) : void => {\r\n                    if ((js[\"readyState\"] && !(/^c|loade/.test(js[\"readyState\"]))) || loaded) return;\r\n                    js.onload = js[\"onreadystatechange\"] = null;\r\n                    loaded = true;\r\n                    this.processScript(scripts, payload, total, ix, run);\r\n                };\r\n                if (YVolatile.Basics.JSLocation === JSLocationEnum.Top) {// location doesn't really matter, but done for consistency\r\n                    var head = document.getElementsByTagName(\"head\")[0];\r\n                    head.insertBefore(js, head.lastChild);\r\n                } else {\r\n                    var body = document.getElementsByTagName(\"body\")[0];\r\n                    body.insertBefore(js, body.lastChild);\r\n                }\r\n            }\r\n        }\r\n\r\n        private processScript(scripts: UrlEntry[], payload: Payload[], total: number, ix: number, run: () => void): void {\r\n            if (ix >= total - 1) {\r\n                run();// we're all done\r\n            } else {\r\n                this.loadNextScript(scripts, payload, total, ix + 1, run);\r\n            }\r\n        }\r\n\r\n        // Change the current page to the specified Uri (may not be part of the unified page set)\r\n        // returns false if the uri couldn't be processed (i.e., it's not part of a unified page set)\r\n        // returns true if the page is now shown and is part of the unified page set\r\n        public setContent(uri: YetaWF.Url, setState: boolean, popupCB?: (result: ContentResult) => HTMLElement): boolean {\r\n\r\n            if (YVolatile.Basics.EditModeActive) return false; // edit mode\r\n            if (YVolatile.Basics.UnifiedMode === UnifiedModeEnum.None) return false; // not unified mode\r\n            if (popupCB) {\r\n                if (YVolatile.Basics.UnifiedMode !== UnifiedModeEnum.DynamicContent && YVolatile.Basics.UnifiedMode !== UnifiedModeEnum.SkinDynamicContent)\r\n                    return false; // popups can only be used with some unified modes\r\n                if (!YVolatile.Basics.UnifiedPopups)\r\n                    return false; // popups not wanted for this UPS\r\n            }\r\n\r\n            // check if we're clicking a link which is part of this unified page\r\n            var path = uri.getPath();\r\n            if (YVolatile.Basics.UnifiedMode === UnifiedModeEnum.DynamicContent || YVolatile.Basics.UnifiedMode === UnifiedModeEnum.SkinDynamicContent) {\r\n                // find all panes that support dynamic content and replace with new modules\r\n                var divs = $YetaWF.getElementsBySelector(\".yUnified[data-pane]\");\r\n                // build data context (like scripts, css files we have)\r\n                var data: ContentData = {\r\n                    CacheVersion: YVolatile.Basics.CacheVersion,\r\n                    Path: path,\r\n                    QueryString: uri.getQuery(),\r\n                    UnifiedSetGuid: YVolatile.Basics.UnifiedSetGuid,\r\n                    UnifiedMode: YVolatile.Basics.UnifiedMode,\r\n                    UnifiedAddonMods: $YetaWF.UnifiedAddonModsLoaded,\r\n                    UniqueIdPrefixCounter: YVolatile.Basics.UniqueIdPrefixCounter,\r\n                    IsMobile: YVolatile.Skin.MinWidthForPopups > window.outerWidth,\r\n                    UnifiedSkinCollection: null,\r\n                    UnifiedSkinFileName: null,\r\n                    Panes: [],\r\n                    KnownCss: [],\r\n                    KnownScripts: []\r\n                };\r\n                if (YVolatile.Basics.UnifiedMode === UnifiedModeEnum.SkinDynamicContent) {\r\n                    data.UnifiedSkinCollection = YVolatile.Basics.UnifiedSkinCollection;\r\n                    data.UnifiedSkinFileName = YVolatile.Basics.UnifiedSkinName;\r\n                }\r\n                for (var div of divs) {\r\n                    data.Panes.push(div.getAttribute(\"data-pane\") as string);\r\n                }\r\n                var css = $YetaWF.getElementsBySelector(\"link[rel=\\\"stylesheet\\\"][data-name]\");\r\n                for (var c of css) {\r\n                    data.KnownCss.push(c.getAttribute(\"data-name\") as string);\r\n                }\r\n                css = $YetaWF.getElementsBySelector(\"style[type=\\\"text/css\\\"][data-name]\");\r\n                for (var c of css) {\r\n                    data.KnownCss.push(c.getAttribute(\"data-name\") as string);\r\n                }\r\n                data.KnownCss = data.KnownCss.concat(YVolatile.Basics.UnifiedCssBundleFiles || []);// add known css files that were added via bundles\r\n                var scripts = $YetaWF.getElementsBySelector(\"script[src][data-name]\");\r\n                for (var s of scripts) {\r\n                    data.KnownScripts.push(s.getAttribute(\"data-name\") as string);\r\n                }\r\n                data.KnownScripts = data.KnownScripts.concat(YVolatile.Basics.KnownScriptsDynamic || []);// known javascript files that were added by content pages\r\n                data.KnownScripts = data.KnownScripts.concat(YVolatile.Basics.UnifiedScriptBundleFiles || []);// add known javascript files that were added via bundles\r\n\r\n                $YetaWF.setLoading();\r\n\r\n                var request: XMLHttpRequest = new XMLHttpRequest();\r\n                request.open(\"POST\", \"/YetaWF_Core/PageContent/Show\" + uri.getQuery(true), true);\r\n                request.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                request.setRequestHeader(\"X-HTTP-Method-Override\", \"GET\");// server has to think this is a GET request so all actions that are invoked actually work\r\n                request.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n                request.onreadystatechange = (ev: Event) : any => {\r\n                    if (request.readyState === 4 /*DONE*/) {\r\n                        $YetaWF.setLoading(false);\r\n                        if (request.status === 200) {\r\n                            var result: ContentResult = JSON.parse(request.responseText);\r\n                            this.processReceivedContent(result, uri, divs, setState, popupCB);\r\n                        } else {\r\n                            $YetaWF.setLoading(false);\r\n                            $YetaWF.alert(YLocs.Forms.AjaxError.format(request.status, request.statusText), YLocs.Forms.AjaxErrorTitle);\r\n                            // tslint:disable-next-line:no-debugger\r\n                            debugger;\r\n                        }\r\n                    }\r\n                };\r\n                request.send(JSON.stringify(data));\r\n                return true;\r\n            } else {\r\n                // check if we have anything with that path as a unified pane and activate the panes\r\n                var divs = $YetaWF.getElementsBySelector(`.yUnified[data-url=\"${path}\"]`);\r\n                if (divs.length > 0) {\r\n\r\n                    $YetaWF.closeOverlays();\r\n\r\n                    // Update the browser address bar with the new path\r\n                    if (setState)\r\n                        $YetaWF.setUrl(uri.toUrl());\r\n                    if (YVolatile.Basics.UnifiedMode === UnifiedModeEnum.HideDivs) {\r\n                        // hide all unified sections\r\n                        var uni = $YetaWF.getElementsBySelector(\".yUnified\");\r\n                        for (var u of uni) {\r\n                            u.style.display = \"none\";\r\n                        }\r\n                        // show all unified sections that are on the current page\r\n                        for (var d of divs) {\r\n                            d.style.display = \"block\";\r\n                        }\r\n                        // send event that a new sections became active/visible\r\n                        $YetaWF.processActivateDivs(divs);\r\n                        // scroll\r\n                        var scrolled = $YetaWF.setScrollPosition();\r\n                        if (!scrolled)\r\n                            window.scroll(0, 0);\r\n                        $YetaWF.setFocus();\r\n                    } else if (YVolatile.Basics.UnifiedMode === UnifiedModeEnum.ShowDivs) {\r\n\r\n                        divs[0].scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n\r\n                        //// calculate an approximate animation time so the shorter the distance, the shorter the animation\r\n                        //var h = document.body.scrollHeight;\r\n                        //var newTop = divs[0].offsetTop;\r\n                        //var scrollDuration = YVolatile.Basics.UnifiedAnimation * (Math.abs(newTop - window.scrollY) / h);\r\n\r\n                        //var scrollStep = (newTop - window.scrollY) / (scrollDuration / 15);\r\n                        //if (!isNaN(scrollStep)) {\r\n\r\n                        //    console.log(`scrolling ${scrollDuration} ${scrollStep}`);\r\n                        //    var scrollInterval = setInterval(function () {\r\n                        //        if (scrollStep > 0 ? window.scrollY + scrollStep > newTop : window.scrollY + scrollStep < newTop) {\r\n                        //            console.log(`scrolling done`);\r\n                        //            window.scrollTo(0, newTop);\r\n                        //            clearInterval(scrollInterval);\r\n                        //        } else {\r\n                        //            console.log(`scrolling step`);\r\n                        //            window.scrollBy(0, scrollStep);\r\n                        //        }\r\n                        //    }, scrollDuration / 15);\r\n                        //}\r\n                    } else\r\n                        throw `Invalid UnifiedMode ${YVolatile.Basics.UnifiedMode}`;\r\n                    $YetaWF.setLoading(false);\r\n                    return true;\r\n                }\r\n                //$YetaWF.setLoading(false); // don't hide, let new page take over\r\n                return false;\r\n            }\r\n        }\r\n\r\n        private processReceivedContent(result: ContentResult, uri: YetaWF.Url, divs: HTMLElement[], setState: boolean, popupCB?: (result: ContentResult) => HTMLElement) : void {\r\n\r\n            $YetaWF.closeOverlays();\r\n\r\n            if (result.Status != null && result.Status.length > 0) {\r\n                $YetaWF.setLoading(false);\r\n                $YetaWF.alert(result.Status, YLocs.Forms.AjaxErrorTitle);\r\n                return;\r\n            }\r\n            if (result.Redirect != null && result.Redirect.length > 0) {\r\n                //$YetaWF.setLoading(false);\r\n                if (popupCB) {\r\n                    // we want a popup and get a redirect, redirect to iframe popup\r\n                    $YetaWF.Popups.openPopup(result.Redirect, true);\r\n                } else {\r\n                    // simple redirect\r\n                    window.location.assign(result.Redirect);\r\n                }\r\n                return;\r\n            }\r\n            if (result.RedirectContent != null && result.RedirectContent.length > 0) {\r\n                this.setContent($YetaWF.parseUrl(result.RedirectContent), setState, popupCB);\r\n                return;\r\n            }\r\n            // run all global scripts (YConfigs, etc.)\r\n            $YetaWF.runGlobalScript(result.Scripts);\r\n            // add all new css files\r\n            for (let urlEntry of result.CssFiles) {\r\n                var found = result.CssFilesPayload.filter((elem: Payload) => { return elem.Name === urlEntry.Name; });\r\n                if (found.length > 0) {\r\n                    var elem = <style type=\"text/css\" data-name={found[0].Name}>{found[0].Text}</style>;\r\n                    if (YVolatile.Basics.CssLocation === CssLocationEnum.Top) {\r\n                        document.head!.appendChild(elem);\r\n                    } else {\r\n                        document.body.appendChild(elem);\r\n                    }\r\n                } else {\r\n                    var elem = <link rel=\"stylesheet\" type=\"text/css\" data-name={urlEntry.Name} href={urlEntry.Url} />;\r\n                    if (YVolatile.Basics.CssLocation === CssLocationEnum.Top) {\r\n                        document.head!.appendChild(elem);\r\n                    } else {\r\n                        document.body.appendChild(elem);\r\n                    }\r\n                }\r\n            }\r\n            YVolatile.Basics.UnifiedCssBundleFiles = YVolatile.Basics.UnifiedCssBundleFiles || [];\r\n            YVolatile.Basics.UnifiedCssBundleFiles.concat(result.CssBundleFiles || []);\r\n\r\n            // add all new script files\r\n            this.loadScripts(result.ScriptFiles, result.ScriptFilesPayload, () => {\r\n                YVolatile.Basics.UnifiedScriptBundleFiles = YVolatile.Basics.UnifiedScriptBundleFiles || [];\r\n                YVolatile.Basics.UnifiedScriptBundleFiles.concat(result.ScriptBundleFiles || []);\r\n                if (!popupCB) {\r\n                    // Update the browser page title\r\n                    document.title = result.PageTitle;\r\n                    // Update the browser address bar with the new path\r\n                    if (setState)\r\n                        $YetaWF.setUrl(uri.toUrl());\r\n                    // remove all pane contents\r\n                    for (var div of divs) {\r\n                        $YetaWF.processClearDiv(div);\r\n                        div.innerHTML = \"\";\r\n                        if (div.getAttribute(\"data-conditional\")) {\r\n                            div.style.display = \"none\";// hide, it's a conditional pane\r\n                        }\r\n                    }\r\n                    // Notify that the page is changing\r\n                    $YetaWF.processPageChange();\r\n                    // remove prior page css classes\r\n                    $YetaWF.elementRemoveClasses(document.body, document.body.getAttribute(\"data-pagecss\"));\r\n                    // add new css classes\r\n                    $YetaWF.elementAddClasses(document.body, result.PageCssClasses);\r\n                    document.body.setAttribute(\"data-pagecss\", result.PageCssClasses);// remember so we can remove them for the next page\r\n                }\r\n                var tags: HTMLElement[] = []; // collect all panes\r\n                if (!popupCB) {\r\n                    // add pane content\r\n                    for (let content of result.Content) {\r\n                        // replace the pane\r\n                        var pane = $YetaWF.getElement1BySelector(`.yUnified[data-pane=\"${content.Pane}\"]`);\r\n                        pane.style.display = \"block\";// show in case this is a conditional pane\r\n                        // add pane (can contain mixed html/scripts)\r\n                        $YetaWF.appendMixedHTML(pane, content.HTML);\r\n                        // run all registered initializations for the pane\r\n                        tags.push(pane);\r\n                    }\r\n                } else {\r\n                    tags.push(popupCB(result));\r\n                }\r\n                // add addons (can contain mixed html/scripts)\r\n                if (result.Addons.length > 0)\r\n                    $YetaWF.appendMixedHTML(document.body, result.Addons);\r\n                YVolatile.Basics.UnifiedAddonModsPrevious = YVolatile.Basics.UnifiedAddonModsPrevious || [];\r\n                YVolatile.Basics.UnifiedAddonMods = YVolatile.Basics.UnifiedAddonMods || [];\r\n                // end of page scripts\r\n                $YetaWF.runGlobalScript(result.EndOfPageScripts);\r\n                // turn off all previously active modules that are no longer active\r\n                YVolatile.Basics.UnifiedAddonModsPrevious.forEach((guid: string) => {\r\n                    if (YVolatile.Basics.UnifiedAddonMods.indexOf(guid) < 0)\r\n                        $YetaWF.processContentChange(guid, false);\r\n                });\r\n                // turn on all newly active modules (if they were previously loaded)\r\n                // new referenced modules that were just loaded now are already active and don't need to be called\r\n                YVolatile.Basics.UnifiedAddonMods.forEach((guid: string) => {\r\n                    if (YVolatile.Basics.UnifiedAddonModsPrevious.indexOf(guid) < 0 && $YetaWF.UnifiedAddonModsLoaded.indexOf(guid) >= 0)\r\n                        $YetaWF.processContentChange(guid, true);\r\n                    if ($YetaWF.UnifiedAddonModsLoaded.indexOf(guid) < 0)\r\n                        $YetaWF.UnifiedAddonModsLoaded.push(guid);\r\n                });\r\n                YVolatile.Basics.UnifiedAddonModsPrevious = YVolatile.Basics.UnifiedAddonMods;\r\n                YVolatile.Basics.UnifiedAddonMods = [];\r\n                // call ready handlers\r\n                $YetaWF.processAllReady(tags);\r\n                $YetaWF.processAllReadyOnce(tags);\r\n                if (!popupCB) {\r\n                    // scroll\r\n                    var scrolled = $YetaWF.setScrollPosition();\r\n                    if (!scrolled)\r\n                        window.scroll(0, 0);\r\n                    // in case there is a popup open, close it now (typically when returning to the page from a popup)\r\n                    if ($YetaWF.PopupsAvailable())\r\n                        $YetaWF.Popups.closeInnerPopup();\r\n                }\r\n                try {\r\n                    $YetaWF.runGlobalScript(result.AnalyticsContent);\r\n                } catch (e) { }\r\n                $YetaWF.processNewPage(uri.toUrl());\r\n                // done, set focus\r\n                $YetaWF.setFocus(tags);\r\n                $YetaWF.setLoading(false);\r\n            });\r\n        }\r\n\r\n        public init() : void {\r\n        }\r\n    }\r\n}\r\n"]}