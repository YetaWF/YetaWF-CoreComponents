{"version":3,"sources":["Addons/YetaWF/Core/_Addons/Basics/ComponentBase.ts"],"names":[],"mappings":"AAEA,kBAAU,MAAM,CAAC;IAEb,yDAAyD;IACzD,eAAsB,iBAAiB;QAEnC,SAAgB,OAAO,EAAE,WAAW,CAAC;QACrC,SAAgB,SAAS,EAAE,MAAM,CAAC;oBAEtB,SAAS,EAAE,MAAM;KAIhC;IAED,kIAAkI;IAClI,eAAsB,qBAAsB,SAAQ,iBAAiB;oBAErD,SAAS,EAAE,MAAM;eAQf,qBAAqB,CAAC,IAAI,SAAS,qBAAqB,EAAE,IAAI,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,IAAI,GAAG,IAAI;eASlH,iBAAiB,CAAC,IAAI,SAAS,qBAAqB,EAAE,IAAI,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,GAAG,IAAI;eAMvG,0BAA0B,CAAC,IAAI,SAAS,qBAAqB,EAAE,QAAQ,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,IAAI,GAAG,IAAI;eAM3I,sBAAsB,CAAC,IAAI,SAAS,qBAAqB,EAAE,QAAQ,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,IAAI;eAIhI,kBAAkB,CAAC,IAAI,SAAS,qBAAqB,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,GAAG,IAAI,GAAG,IAAI;eAMxG,cAAc,CAAC,IAAI,SAAS,qBAAqB,EAAE,EAAE,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,GAAG,IAAI;QAKpG,OAAO,IAAI,IAAI;QAItB;;WAEG;eACW,QAAQ,CAAC,IAAI,SAAS,qBAAqB,EAAE,GAAG,EAAE,WAAW,EAAE,eAAe,EAAE,MAAM,EAAE,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,KAAK,IAAI,GAAG,IAAI;KASlJ;CACJ","file":"ComponentBase.d.ts","sourcesContent":["/* Copyright Â© 2019 Softel vdm, Inc. - https://yetawf.com/Documentation/YetaWF/Licensing */\r\n\r\nnamespace YetaWF {\r\n\r\n    /** A simple control without internal data management. */\r\n    export abstract class ComponentBaseImpl {\r\n\r\n        public readonly Control: HTMLElement;\r\n        public readonly ControlId: string;\r\n\r\n        constructor(controlId: string) {\r\n            this.ControlId = controlId;\r\n            this.Control = $YetaWF.getElementById(controlId);\r\n        }\r\n    }\r\n\r\n    /** A control with internal data management. clearDiv must be called to clean up, typically used with $YetaWF.registerClearDiv. */\r\n    export abstract class ComponentBaseDataImpl extends ComponentBaseImpl {\r\n\r\n        constructor(controlId: string) {\r\n            super(controlId);\r\n\r\n            $YetaWF.addObjectDataById(controlId, this);\r\n        }\r\n\r\n        // Various ways to find the control object (using tag, selector or id)\r\n\r\n        public static getControlFromTagCond<CLSS extends ComponentBaseDataImpl>(elem: HTMLElement, controlSelector: string): CLSS | null {\r\n            var control = $YetaWF.elementClosestCond(elem, controlSelector) as HTMLElement;\r\n            if (control == null)\r\n                return null;\r\n            var obj = $YetaWF.getObjectData(control) as CLSS;\r\n            if (obj.Control !== control)\r\n                throw `object data doesn't match control type - ${controlSelector} - ${control.outerHTML}`;\r\n            return obj;\r\n        }\r\n        public static getControlFromTag<CLSS extends ComponentBaseDataImpl>(elem: HTMLElement, controlSelector: string): CLSS {\r\n            var obj = ComponentBaseDataImpl.getControlFromTagCond<CLSS>(elem, controlSelector);\r\n            if (obj == null)\r\n                throw `Object matching ${controlSelector} not found`;\r\n            return obj;\r\n        }\r\n        public static getControlFromSelectorCond<CLSS extends ComponentBaseDataImpl>(selector: string, controlSelector: string, tags: HTMLElement[]): CLSS | null {\r\n            var tag = $YetaWF.getElement1BySelectorCond(selector, tags);\r\n            if (tag == null)\r\n                return null;\r\n            return ComponentBaseDataImpl.getControlFromTagCond(tag, controlSelector);\r\n        }\r\n        public static getControlFromSelector<CLSS extends ComponentBaseDataImpl>(selector: string, controlSelector: string, tags: HTMLElement[]): CLSS {\r\n            var tag = $YetaWF.getElement1BySelector(selector, tags);\r\n            return ComponentBaseDataImpl.getControlFromTag(tag, controlSelector);\r\n        }\r\n        public static getControlByIdCond<CLSS extends ComponentBaseDataImpl>(id: string, controlSelector: string): CLSS | null {\r\n            var tag = $YetaWF.getElementByIdCond(id);\r\n            if (tag == null)\r\n                return null;\r\n            return ComponentBaseDataImpl.getControlFromTagCond(tag, controlSelector);\r\n        }\r\n        public static getControlById<CLSS extends ComponentBaseDataImpl>(id: string, controlSelector: string): CLSS {\r\n            var tag = $YetaWF.getElementById(id);\r\n            return ComponentBaseDataImpl.getControlFromTag(tag, controlSelector);\r\n        }\r\n\r\n        public destroy(): void {\r\n            $YetaWF.removeObjectDataById(this.Control.id);\r\n        }\r\n\r\n        /**\r\n         * A <div> is being emptied. Destroy all controls described by controlSelector (the control type) and call the optional callback.\r\n         */\r\n        public static clearDiv<CLSS extends ComponentBaseDataImpl>(tag: HTMLElement, controlSelector: string, callback?: (control: CLSS) => void): void {\r\n            var list = $YetaWF.getElementsBySelector(controlSelector, [tag]);\r\n            for (let el of list) {\r\n                var control = ComponentBaseDataImpl.getControlFromTag<CLSS>(el, controlSelector);\r\n                if (callback)\r\n                    callback(control);\r\n                control.destroy();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}